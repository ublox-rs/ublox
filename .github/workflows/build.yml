name: Build & Test

on:
  push: 
    branches: master
  pull_request:
    branches: master
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature-args:
          - --features "alloc std ubx_proto23" 
          - --no-default-features --features "alloc ubx_proto23" 
          - --no-default-features --features ubx_proto23
          - --no-default-features --features ubx_proto27
          - --no-default-features --features ubx_proto31
    steps:
    - uses: actions/checkout@v4
    - name: Install libudev
      run: sudo apt-get update && sudo apt-get install -y libudev-dev
    - name: Install MSRV
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.81.0
        override: true
        components: rustfmt, clippy
    - name: Build
      run: cargo build --verbose ${{ matrix.feature-args }}
    - name: Run tests
      run: cargo test --verbose ${{ matrix.feature-args }}
    - name: Coding style
      run: |
        cargo fmt --all -- --check
        cargo clippy --all-targets -- -D warnings

  build_embedded:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features:
          - ubx_proto23
          - alloc,ubx_proto23
          - serde,ubx_proto23
    steps:
    - uses: actions/checkout@v4
    - name: Install MSRV
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.81.0
        override: true
    - name: Install embedded targets
      run: rustup target add thumbv6m-none-eabi thumbv7m-none-eabi thumbv7em-none-eabihf
    - name: Build ${{ matrix.features }}
      run: cargo build --verbose --no-default-features --target thumbv6m-none-eabi --target thumbv7m-none-eabi --target thumbv7em-none-eabihf --features ${{ matrix.features }}

  build_examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install libudev
      run: sudo apt-get update && sudo apt-get install -y libudev-dev
    - name: Install MSRV
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.81.0
        override: true
        components: rustfmt, clippy
    - name: Build
      run: cargo build --release --all
    - name: Coding style
      run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets --all -- -D warnings
  
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
    
      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: ublox_derive
        run: |
            cd ublox_derive
            RUSTDOCFLAGS="--cfg docrs" \
                cargo +nightly doc --no-deps
      
      - name: ublox
        run: |
            cd ublox
            RUSTDOCFLAGS="--cfg docrs" \
                cargo +nightly doc --no-deps

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-hack
      - name: Install libudev
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Check MSRV for examples
        run: cargo hack check --rust-version --workspace

  semver:
    name: semver
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature-group: [default-features]
        include:
          - feature-group: default-features
            feature: alloc
          - feature-group: only-explicit-features
            feature: ubx_proto23 
          - feature-group: only-explicit-features
            feature: ubx_proto27 
          - feature-group: only-explicit-features
            feature: ubx_proto31 
    steps:
      - uses: actions/checkout@v4
      - name: SemVer Check 
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          package: ublox
          feature-group: ${{matrix.feature-group}}
          features: ${{ matrix.feature }}
          rust-toolchain: stable
          release-type: minor
