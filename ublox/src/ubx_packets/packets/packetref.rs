use super::*;
use crate::UbxUnknownPacketRef;
use ublox_derive::define_recv_packets;

#[cfg(feature = "ubx_proto23")]
define_recv_packets!(
    enum PacketRef {
        _ = UbxUnknownPacketRef,
        AlpSrv,
        AckAck,
        AckNak,
        CfgAnt,
        CfgEsfAlg,
        CfgEsfWt,
        CfgItfm,
        CfgNav5,
        CfgOdo,
        CfgPrtI2c,
        CfgPrtSpi,
        CfgPrtUart,
        CfgSmgr,
        CfgTmode2,
        CfgTmode3,
        CfgTp5,
        EsfAlg,
        EsfIns,
        EsfMeas,
        EsfStatus,
        EsfRaw,
        InfError,
        InfWarning,
        InfNotice,
        InfTest,
        InfDebug,
        HnrAtt,
        HnrIns,
        HnrPvt,
        MonVer,
        MonGnss,
        MonHw,
        MgaAck,
        MgaGpsIono,
        MgaGpsEph,
        MgaGloEph,
        NavAtt,
        NavClock,
        NavDop,
        NavEoe,
        NavHpPosLlh,
        NavHpPosEcef,
        NavOdo,
        NavPvt,
        NavPosLlh,
        NavRelPosNed,
        NavSat,
        NavSolution,
        NavStatus,
        NavVelNed,
        NavTimeUTC,
        NavTimeLs,
        NavVelECEF,
        RxmRawx,
        RxmRtcm,
        RxmSfrbx,
        SecUniqId,
        TimSvin,
        TimTp,
        TimTm2,
        TimTos,
    }
);

#[cfg(feature = "ubx_proto27")]
define_recv_packets!(
    enum PacketRef {
        _ = UbxUnknownPacketRef,
        AlpSrv,
        AckAck,
        AckNak,
        CfgItfm,
        CfgPrtI2c,
        CfgPrtSpi,
        CfgPrtUart,
        CfgNav5,
        CfgAnt,
        CfgOdo,
        CfgTmode2,
        CfgTmode3,
        CfgTp5,
        CfgEsfAlg,
        CfgEsfWt,
        EsfAlg,
        EsfIns,
        EsfMeas,
        EsfStatus,
        EsfRaw,
        InfError,
        InfWarning,
        InfNotice,
        InfTest,
        InfDebug,
        MonVer,
        MonGnss,
        MonHw,
        MgaAck,
        MgaGpsIono,
        MgaGpsEph,
        MgaGloEph,
        NavAtt,
        NavClock,
        NavDop,
        NavEoe,
        NavHpPosLlh,
        NavHpPosEcef,
        NavOdo,
        NavPvt,
        NavPosLlh,
        NavRelPosNed,
        NavSat,
        NavSig,
        NavSolution,
        NavStatus,
        NavVelNed,
        NavTimeUTC,
        NavTimeLs,
        NavVelECEF,
        RxmRawx,
        RxmRtcm,
        RxmSfrbx,
        SecUniqId,
        TimSvin,
        TimTp,
        TimTm2,
    }
);

#[cfg(feature = "ubx_proto31")]
define_recv_packets!(
    enum PacketRef {
        _ = UbxUnknownPacketRef,
        AlpSrv,
        AckAck,
        AckNak,
        CfgItfm,
        CfgPrtI2c,
        CfgPrtSpi,
        CfgPrtUart,
        CfgNav5,
        CfgAnt,
        CfgOdo,
        CfgTmode2,
        CfgTmode3,
        CfgTp5,
        CfgEsfAlg,
        CfgEsfWt,
        EsfAlg,
        EsfIns,
        EsfMeas,
        EsfStatus,
        EsfRaw,
        InfError,
        InfWarning,
        InfNotice,
        InfTest,
        InfDebug,
        MonVer,
        MonGnss,
        MonHw,
        MgaAck,
        MgaGpsIono,
        MgaGpsEph,
        MgaGloEph,
        NavAtt,
        NavClock,
        NavDop,
        NavEoe,
        NavHpPosLlh,
        NavHpPosEcef,
        NavOdo,
        NavPvt,
        NavPosLlh,
        NavRelPosNed,
        NavSat,
        NavSig,
        NavSolution,
        NavStatus,
        NavVelNed,
        NavTimeUTC,
        NavTimeLs,
        NavVelECEF,
        RxmRawx,
        RxmRtcm,
        RxmSfrbx,
        SecUniqId,
        TimSvin,
        TimTp,
        TimTm2,
    }
);
